const axios = require('axios');
const Message = require('../models/Message');
require('dotenv').config();

const OPENAI_URL = 'https://api.openai.com/v1/chat/completions';

const chatHandler = async (req, res) => {
  try {
    const { userId, message } = req.body;

    // Save user message
    await Message.create({ userId, role: 'user', content: message });

    // Fetch previous conversation (optional for context)
    const history = await Message.find({ userId }).sort({ timestamp: 1 });

    // Format for OpenAI chat
    const formattedHistory = history.map(msg => ({
      role: msg.role,
      content: msg.content
    }));

    // Add latest user message to history
    formattedHistory.push({ role: 'user', content: message });

    // OpenAI API Call
    const response = await axios.post(
      OPENAI_URL,
      {
        model: 'gpt-4',
        messages: formattedHistory,
        temperature: 0.7,
      },
      {
        headers: {
          Authorization: Bearer ${process.env.OPENAI_API_KEY},
          'Content-Type': 'application/json'
        }
      }
    );

    const botReply = response.data.choices[0].message.content;

    // Save assistant response
    await Message.create({ userId, role: 'assistant', content: botReply });

    res.status(200).json({ reply: botReply });

  } catch (err) {
    console.error(err);
    res.status(500).json({ error: 'Chat failed' });
  }
};

module.exports = { chatHandler };
